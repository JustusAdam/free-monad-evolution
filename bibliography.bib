% Encoding: UTF-8

@Misc{hedis,
  author    = {Falko Peters},
  title     = {{Client library for the Redis datastore}},
  month     = jan,
  year      = {2011},
  timestamp = {2018-04-21},
  url       = {http://hackage.haskell.org/package/hedis},
}

@Misc{yesod,
  author    = {Michael Snoyman},
  title     = {{Creation of type-safe, RESTful web applications.}},
  month     = mar,
  year      = {2010},
  timestamp = {2018-04-21},
  url       = {http://hackage.haskell.org/package/yesod-core},
}

@InProceedings{transformer-inspiration,
  author    = {Jones, Mark P.},
  title     = {Functional programming with overloading and higher-order polymorphism},
  booktitle = {Advanced Functional Programming},
  year      = {1995},
  editor    = {Jeuring, Johan and Meijer, Erik},
  pages     = {97--136},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {The Hindley/Milner type system has been widely adopted as a basis for statically typed functional languages. One of the main reasons for this is that it provides an elegant compromise between flexibility, allowing a single value to be used in different ways, and practicality, freeing the programmer from the need to supply explicit type information. Focusing on practical applications rather than implementation or theoretical details, these notes examine a range of extensions that provide more flexible type systems while retaining many of the properties that have made the original Hindley/Milner system so popular. The topics discussed, some old, but most quite recent, include higher-order polymorphism and type and constructor class overloading. Particular emphasis is placed on the use of these features to promote modularity and reusability.},
  isbn      = {978-3-540-49270-2},
}

@InProceedings{monad-transformers,
  author    = {Liang, Sheng and Hudak, Paul and Jones, Mark},
  title     = {{Monad Transformers and Modular Interpreters}},
  booktitle = {Proceedings of the 22Nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  year      = {1995},
  series    = {POPL '95},
  pages     = {333--343},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {199528},
  doi       = {10.1145/199448.199528},
  isbn      = {0-89791-692-1},
  location  = {San Francisco, California, USA},
  numpages  = {11},
  url       = {http://doi.acm.org/10.1145/199448.199528},
}

@Article{data-types-a-la-carte,
  author    = {Swierstra, Wouter},
  title     = {Data types à la carte},
  journal   = {Journal of Functional Programming},
  year      = {2008},
  volume    = {18},
  number    = {4},
  pages     = {423–436},
  doi       = {10.1017/S0956796808006758},
  publisher = {Cambridge University Press},
}

@InProceedings{extensible-effects,
  author    = {Kiselyov, Oleg and Sabry, Amr and Swords, Cameron},
  title     = {{Extensible Effects: An Alternative to Monad Transformers}},
  booktitle = {Proceedings of the 2013 ACM SIGPLAN Symposium on Haskell},
  year      = {2013},
  series    = {Haskell '13},
  pages     = {59--70},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2503791},
  doi       = {10.1145/2503778.2503791},
  isbn      = {978-1-4503-2383-3},
  keywords  = {coroutine, effect handler, effect interaction, monad, monad transformer, open union, type and effect system},
  location  = {Boston, Massachusetts, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2503778.2503791},
}

@InProceedings{asymptotic-performance-improvement,
  author    = {Voigtl{\"a}nder, Janis},
  title     = {{Asymptotic Improvement of Computations over Free Monads}},
  booktitle = {Mathematics of Program Construction},
  year      = {2008},
  editor    = {Audebaud, Philippe and Paulin-Mohring, Christine},
  pages     = {388--403},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {We present a low-effort program transformation to improve the efficiency of computations over free monads in Haskell. The development is calculational and carried out in a generic setting, thus applying to a variety of datatypes. An important aspect of our approach is the utilisation of type class mechanisms to make the transformation as transparent as possible, requiring no restructuring of code at all. There is also no extra support necessary from the compiler (apart from an up-to-date type checker). Despite this simplicity of use, our technique is able to achieve true asymptotic runtime improvements. We demonstrate this by examples for which the complexity is reduced from quadratic to linear.},
  isbn      = {978-3-540-70594-9},
}

@Article{difference-list,
  author   = {Hughes, R. John Muir},
  title    = {{A novel representation of lists and its application to the function "reverse"}},
  journal  = {Information Processing Letters},
  year     = {1986},
  volume   = {22},
  number   = {3},
  pages    = {141 - 144},
  issn     = {0020-0190},
  doi      = {https://doi.org/10.1016/0020-0190(86)90059-1},
  keywords = {Functional programming, list processing, data representation, program transformation},
  url      = {http://www.sciencedirect.com/science/article/pii/0020019086900591},
}

@InProceedings{ftc-queue,
  author    = {Ploeg, Atze van der and Kiselyov, Oleg},
  title     = {{Reflection Without Remorse: Revealing a Hidden Sequence to Speed Up Monadic Reflection}},
  booktitle = {Proceedings of the 2014 ACM SIGPLAN Symposium on Haskell},
  year      = {2014},
  series    = {Haskell '14},
  pages     = {133--144},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2633360},
  doi       = {10.1145/2633357.2633360},
  isbn      = {978-1-4503-3041-1},
  keywords  = {data structures, monads, performance, reflection},
  location  = {Gothenburg, Sweden},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2633357.2633360},
}

@InProceedings{freer,
  author    = {Kiselyov, Oleg and Ishii, Hiromi},
  title     = {Freer Monads, More Extensible Effects},
  booktitle = {Proceedings of the 2015 ACM SIGPLAN Symposium on Haskell},
  year      = {2015},
  series    = {Haskell '15},
  pages     = {94--105},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2804319},
  doi       = {10.1145/2804302.2804319},
  isbn      = {978-1-4503-3808-0},
  keywords  = {Kan extension, coroutine, effect handler, effect interaction, free monad, open union, type and effect system},
  location  = {Vancouver, BC, Canada},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2804302.2804319},
}

@Misc{mtl,
  author = {Andy Gill},
  title  = {{Monad classes, using functional dependencies}},
  month  = nov,
  year   = {2006},
  url    = {http://hackage.haskell.org/package/mtl},
}

@Misc{transformers,
  author = {Andy Gill and Ross Paterson},
  title  = {{Concrete functor and monad transformers}},
  month  = jan,
  year   = {2009},
  url    = {http://hackage.haskell.org/package/transformers},
}

@Misc{ghc,
  author = {{The GHC Team}},
  title  = {{The Glasgow Haskell Compiler}},
  url    = {https://www.haskell.org/ghc/},
}

@Misc{purescript,
  title = {{The PureScript Programming Language}},
  url   = {http://www.purescript.org/},
}

@InProceedings{hia,
  author    = {Kammar, Ohad and Lindley, Sam and Oury, Nicolas},
  title     = {{Handlers in Action}},
  booktitle = {Proceedings of the 18th ACM SIGPLAN International Conference on Functional Programming},
  year      = {2013},
  series    = {ICFP '13},
  pages     = {145--158},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2500590},
  doi       = {10.1145/2500365.2500590},
  isbn      = {978-1-4503-2326-0},
  keywords  = {algebraic effects, continuations, effect handlers, effect typing, haskell, modularity, monads},
  location  = {Boston, Massachusetts, USA},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/2500365.2500590},
}

@InProceedings{algebraic-effects-idris,
  author    = {Brady, Edwin},
  title     = {{Programming and Reasoning with Algebraic Effects and Dependent Types}},
  booktitle = {Proceedings of the 18th ACM SIGPLAN International Conference on Functional Programming},
  year      = {2013},
  series    = {ICFP '13},
  pages     = {133--144},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2500581},
  doi       = {10.1145/2500365.2500581},
  isbn      = {978-1-4503-2326-0},
  keywords  = {algebraic effects, dependent types},
  location  = {Boston, Massachusetts, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2500365.2500581},
}

@Article{idris-paper,
  author    = {Brady, Edwin},
  title     = {{Idris, a general-purpose dependently typed programming language: Design and implementation}},
  journal   = {Journal of Functional Programming},
  year      = {2013},
  volume    = {23},
  number    = {5},
  pages     = {552–593},
  doi       = {10.1017/S095679681300018X},
  publisher = {Cambridge University Press},
}

@Misc{idris,
  title = {{Idris: A Language with Dependent Types}},
  url   = {https://www.idris-lang.org/},
}

@Comment{jabref-meta: databaseType:bibtex;}
